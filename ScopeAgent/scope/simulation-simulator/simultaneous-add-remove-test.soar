sp {initialize*simultaneous*add*remove
   (state <s> ^operator <o>
              ^io.input-link <input>
              ^simulated yes)
   (<o> ^name initialize-scope
        ^test-name simultaneous-add-remove)
-->
   (<s> ^simulate-task <sim>)
   (<sim> ^current <n1>)
   # t=1 add the first task
   (<n1> ^add <a1>)
   (<a1> ^obj <input>
         ^task <t1>)
   (<t1> ^workload 3
         ^taskID 0
         ^release yes)
   (<n1> ^next <n2>)
   # t=2 add the second task
   (<n2> ^add <a2>)
   (<a2> ^obj <input>
         ^task <t2>)
   (<t2> ^workload 2
         ^taskID 1
         ^release yes)
   (<n2> ^next <n3>))
   # t=3 remove the first task
   (<n3> ^remove <r3>)
   (<r3> ^obj <input>
         ^task <t1>)
   # t=3 also add a brand new task
   (<n3> ^add <a3>)
   (<a3> ^obj <input>
         ^task <t3>)
   (<t3> ^workload 1
         ^taskID 2
         ^release yes)
   # add one more event so it doesn't kill it too early
   (<n3> ^next <n4>)
}